// Place your key bindings in this file to override the defaults
[
    // Emacs-y
    { "key": "cmd+f", "command": "cursorWordEndRight", "when": "textInputFocus" },
    { "key": "alt+f", "command": "cursorWordEndRight", "when": "textInputFocus" },
    { "key": "cmd+b", "command": "cursorWordStartLeft", "when": "textInputFocus" },
    { "key": "alt+b", "command": "cursorWordStartLeft", "when": "textInputFocus" },
    { "key": "cmd+shift+.", "command": "cursorBottom", "when": "textInputFocus"},
    { "key": "cmd+shift+,", "command": "cursorTop", "when": "textInputFocus" },
    { "key": "ctrl+v", "command": "cursorPageDown", "when": "textInputFocus" },
    { "key": "cmd+v", "command": "cursorPageUp", "when": "textInputFocus" },

    { "key": "ctrl+y", "command": "editor.action.clipboardPasteAction", "when": "textInputFocus && !editorReadonly" },
    { "key": "ctrl+s", "command": "actions.find" },
    { "key": "ctrl+j", "command": "type", "args": { "text": "\n" }, "when": "textInputFocus && !editorReadonly" },
    { "key": "cmd+d", "command": "deleteWordRight", "when": "textInputFocus && !editorReadonly" },
    { "key": "cmd+backspace", "command": "deleteWordLeft", "when": "textInputFocus && !editorReadonly" },
    { "key": "alt+backspace", "command": "deleteWordLeft", "when": "textInputFocus && !editorReadonly" },
    { "key": "cmd+k", "command": "deleteAllLeft", "when": "textInputFocus && !editorReadonly" },
//    { "key": "ctrl+i", "command": "editor.action.formatSelection", "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly" },
//    { "key": "ctrl+i", "command": "editor.action.formatSelection", "when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly" },
    { "key": "ctrl+i", "command": "editor.action.formatSelection" },
    // Xcode-y
    // Debugging draws inspirations from Xcode 3â€”a more civilized age!
    { "key": "ctrl+cmd+j", "command": "editor.action.revealDefinition", "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor" },
    { "key": "ctrl+cmd+left", "command": "workbench.action.navigateBack" },
    { "key": "ctrl+cmd+right", "command": "workbench.action.navigateForward" },
    { "key": "ctrl+/", "command": "editor.action.commentLine", "when": "editorTextFocus" },
    { "key": "alt+/", "command": "editor.action.blockComment", "when": "editorTextFocus" },

    { "key": "cmd+shift+o", "command": "workbench.action.quickOpen" },
    { "key": "ctrl+cmd+o", "command": "workbench.action.files.openFileFolder" },

    { "key": "cmd+r", "command": "workbench.action.debug.start", "when": "!inDebugMode" },
    { "key": "cmd+.", "command": "workbench.action.debug.stop", "when": "inDebugMode" },
    { "key": "cmd+\\", "command": "editor.debug.action.toggleBreakpoint", "when": "editorTextFocus" },

    { "key": "cmd+o", "command": "workbench.action.debug.stepOver", "when": "debugState == 'stopped'" },
    { "key": "cmd+i", "command": "workbench.action.debug.stepInto", "when": "debugState == 'stopped'" },
    { "key": "cmd+t", "command": "workbench.action.debug.stepOut", "when": "debugState == 'stopped'" },
    {
        "key": "cmd+p",
        "command": "workbench.action.debug.continue",
        "when": "inDebugMode"
    },
    {
        "key": "cmd+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+l",
        "command": "workbench.action.editor.changeLanguageMode"
    },
    {
        "key": "cmd+k m",
        "command": "-workbench.action.editor.changeLanguageMode"
    },
    {
        "key": "ctrl+x ctrl+j",
        "command": "editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+x ctrl+k",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+0",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.focusActiveEditorGroup"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "alt+s",
        "command": "workbench.action.focusSideBar"
    },
    {
        "key": "cmd+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "cmd+enter",
        "command": "explorer.openAndPassFocus",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "cmd+down",
        "command": "-explorer.openAndPassFocus",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
    }
]
